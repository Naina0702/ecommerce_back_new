import { Session } from './Session';
import { AxiosResponse } from 'axios';
import { GetResponseType, SetResponseType } from './types';
export declare class Connection {
    requestVerificationTokens: string[];
    url: string;
    session: Session;
    ready: Promise<void>;
    constructor(url: string, timeout: number);
    reload(): void;
    private createRequestXml;
    private processResponseXml;
    private checkResponseStatus;
    private initializeCsrfTokensAndSession;
    private buildFinalUrl;
    postGet(endpoint: string, data: Record<string, unknown>, refreshCsrf?: boolean, prefix?: string): Promise<GetResponseType>;
    postSet(endpoint: string, data: Record<string, unknown>, refreshCsrf?: boolean, prefix?: string): Promise<SetResponseType>;
    private getToken;
    get(endpoint: string, parameters?: {
        [key: string]: string;
    }, prefix?: string): Promise<GetResponseType>;
    private post;
    postFile(endpoint: string, files: {
        [key: string]: Blob;
    }, data?: {
        [key: string]: string | Blob | number;
    }, prefix?: string): Promise<AxiosResponse>;
}
