"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pin = void 0;
var ApiGroup_1 = require("../ApiGroup");
var Pin = /** @class */ (function (_super) {
    __extends(Pin, _super);
    function Pin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Pin.prototype.status = function () {
        return this._connection.get('pin/status');
    };
    Pin.prototype.simlock = function () {
        return this._connection.get('pin/simlock');
    };
    Pin.prototype.savePin = function () {
        return this._connection.get('pin/save-pin');
    };
    /**
     * Change pin
     * @param operate_type number Operation type to perform (default is `0`).
            0 - verify PIN
            1 - enable PIN verification
            2 - disable PIN verification
            3 - set new PIN
            4 - use of the PUK code
     * @param currentPin Current PIN number (default is `null`).
     * @param newPin New PIN number to set (default is `null`).
     * @param pukCode PUK code to use in case it is required by the device (default is `null`).
     */
    Pin.prototype.operate = function (operate_type, currentPin, newPin, pukCode) {
        if (operate_type === void 0) { operate_type = 0; }
        return this._connection.postSet('pin/operate', {
            'OperateType': operate_type,
            'CurrentPin': currentPin,
            'NewPin': newPin,
            'PukCode': pukCode
        });
    };
    return Pin;
}(ApiGroup_1.ApiGroup));
exports.Pin = Pin;
//# sourceMappingURL=Pin.js.map