"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Device = void 0;
var ApiGroup_1 = require("../ApiGroup");
var device_1 = require("../enums/device");
var Device = /** @class */ (function (_super) {
    __extends(Device, _super);
    function Device() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Device.prototype.information = function () {
        return this._connection.get('device/information');
    };
    Device.prototype.autorunVersion = function () {
        return this._connection.get('device/autorun-version');
    };
    Device.prototype.deviceFeatureSwitch = function () {
        return this._connection.get('device/device-feature-switch');
    };
    Device.prototype.basicInformation = function () {
        return this._connection.get('device/basic_information');
    };
    Device.prototype.basicinformation = function () {
        return this._connection.get('device/basicinformation');
    };
    Device.prototype.usbTetheringSwitch = function () {
        return this._connection.get('device/usb-tethering-switch');
    };
    Device.prototype.bootTime = function () {
        return this._connection.get('device/boot_time');
    };
    Device.prototype.setControl = function (control) {
        if (control === void 0) { control = 4; }
        return this._connection.postSet('device/control', {
            'Control': control
        });
    };
    Device.prototype.signal = function () {
        return this._connection.get('device/signal');
    };
    Device.prototype.control = function (control) {
        return this._connection.postSet('device/control', {
            'Control': control
        });
    };
    Device.prototype.reboot = function () {
        return this.control(1);
    };
    Device.prototype.antennaStatus = function () {
        return this._connection.get('device/antenna_status');
    };
    Device.prototype.getAntennaSettings = function () {
        return this._connection.get('device/antenna_settings');
    };
    Device.prototype.setAntennaSettings = function (antennaType) {
        if (antennaType === void 0) { antennaType = device_1.AntennaTypeEnum.AUTO; }
        return this._connection.postSet('device/antenna_settings', {
            'antenna_type': antennaType.toString()
        });
    };
    Device.prototype.antennaType = function () {
        return this._connection.get('device/antenna_type');
    };
    Device.prototype.antennaSetType = function () {
        return this._connection.get('device/antenna_set_type');
    };
    /**
     * Endpoint found by reverse engineering B310s-22 firmware, unknown usage
     */
    Device.prototype.logsetting = function () {
        return this._connection.get('device/logsetting');
    };
    return Device;
}(ApiGroup_1.ApiGroup));
exports.Device = Device;
//# sourceMappingURL=Device.js.map