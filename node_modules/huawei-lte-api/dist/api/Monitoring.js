"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Monitoring = void 0;
var ApiGroup_1 = require("../ApiGroup");
var Monitoring = /** @class */ (function (_super) {
    __extends(Monitoring, _super);
    function Monitoring() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Monitoring.prototype.convergedStatus = function () {
        return this._connection.get('monitoring/converged-status');
    };
    Monitoring.prototype.status = function () {
        return this._connection.get('monitoring/status');
    };
    Monitoring.prototype.checkNotifications = function () {
        return this._connection.get('monitoring/check-notifications');
    };
    Monitoring.prototype.trafficStatistics = function () {
        return this._connection.get('monitoring/traffic-statistics');
    };
    Monitoring.prototype.startDate = function () {
        return this._connection.get('monitoring/start_date');
    };
    /**
     * Sets network usage alarm for LTE
     * @param startDay number of day when monitoring starts
     * @param dataLimit Maximal data limit as string eg.: 1000MB or 1GB and so on
     * @param monthThreshold Alarm threshold in % as int number eg.: 90
     */
    Monitoring.prototype.setStartDate = function (startDay, dataLimit, monthThreshold) {
        return this._connection.postSet('monitoring/start_date', {
            'StartDay': startDay,
            'DataLimit': dataLimit,
            'MonthThreshold': monthThreshold,
            'SetMonthData': 1
        });
    };
    Monitoring.prototype.startDateWlan = function () {
        return this._connection.get('monitoring/start_date_wlan');
    };
    /**
     * Sets network usage alarm for WLAN
     * @param startDay number of day when monitoring starts
     * @param dataLimit Maximal data limit as string eg.: 1000MB or 1GB and so on
     * @param monthThreshold Alarm threshold in % as int number eg.: 90
     */
    Monitoring.prototype.setStartDateWlan = function (startDay, dataLimit, monthThreshold) {
        return this._connection.postSet('monitoring/start_date_wlan', {
            'StartDay': startDay,
            'DataLimit': dataLimit,
            'MonthThreshold': monthThreshold,
            'SettingEnable': 1 //!FIXME
        });
    };
    Monitoring.prototype.monthStatistics = function () {
        return this._connection.get('monitoring/month_statistics');
    };
    Monitoring.prototype.monthStatisticsWlan = function () {
        return this._connection.get('monitoring/month_statistics_wlan');
    };
    Monitoring.prototype.setClearTraffic = function () {
        return this._connection.postSet('monitoring/clear-traffic', {
            'ClearTraffic': 1
        });
    };
    /**
     * Endpoint found by reverse engineering B310s-22 firmware, unknown usage, probably not implemented by Huawei
     */
    Monitoring.prototype.wifiMonthSetting = function () {
        return this._connection.get('monitoring/wifi-month-setting');
    };
    return Monitoring;
}(ApiGroup_1.ApiGroup));
exports.Monitoring = Monitoring;
//# sourceMappingURL=Monitoring.js.map