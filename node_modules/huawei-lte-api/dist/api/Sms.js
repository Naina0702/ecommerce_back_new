"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sms = void 0;
var ApiGroup_1 = require("../ApiGroup");
var sms_1 = require("../enums/sms");
var Sms = /** @class */ (function (_super) {
    __extends(Sms, _super);
    function Sms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Sms.prototype.getCbsnewslist = function () {
        return this._connection.get('sms/get-cbsnewslist');
    };
    Sms.prototype.smsCount = function () {
        return this._connection.get('sms/sms-count');
    };
    Sms.prototype.splitinfoSms = function () {
        return this._connection.get('sms/splitinfo-sms');
    };
    Sms.prototype.smsFeatureSwitch = function () {
        return this._connection.get('sms/sms-feature-switch');
    };
    Sms.prototype.sendStatus = function () {
        return this._connection.get('sms/send-status');
    };
    Sms.prototype.getSmsList = function (page, boxType, readCount, sortType, ascending, unreadPreferred) {
        if (page === void 0) { page = 1; }
        if (boxType === void 0) { boxType = sms_1.BoxTypeEnum.LOCAL_INBOX; }
        if (readCount === void 0) { readCount = 20; }
        if (sortType === void 0) { sortType = 0; }
        if (ascending === void 0) { ascending = 0; }
        if (unreadPreferred === void 0) { unreadPreferred = 0; }
        return this._connection.postGet('sms/sms-list', {
            'PageIndex': page,
            'ReadCount': readCount,
            'BoxType': boxType,
            'SortType': sortType,
            'Ascending': ascending,
            'UnreadPreferred': unreadPreferred,
        });
    };
    /**
     * Delete single SMS by its ID
     * @param smsId Id of SMS you wish to delete
     */
    Sms.prototype.deleteSms = function (smsId) {
        return this._connection.postSet('sms/delete-sms', { 'Index': smsId });
    };
    Sms.prototype.backupSim = function (fromDate, isMove) {
        if (isMove === void 0) { isMove = false; }
        return this._connection.postSet('sms/backup-sim', {
            'IsMove': isMove ? 1 : 0,
            'Date': fromDate.toISOString().slice(0, 19).replace('T', ' ')
        });
    };
    Sms.prototype.setRead = function (smsId) {
        return this._connection.postSet('sms/set-read', {
            'Index': smsId
        });
    };
    Sms.prototype.saveSms = function (phoneNumbers, message, smsIndex, sca, textMode, fromDate) {
        if (smsIndex === void 0) { smsIndex = -1; }
        if (sca === void 0) { sca = ''; }
        if (textMode === void 0) { textMode = sms_1.TextModeEnum.SEVEN_BIT; }
        if (!fromDate) {
            fromDate = new Date();
        }
        /*dicttoxml_xargs = {
            'item_func': lambda x: x[:-1]
        }*/
        return this._connection.postSet('sms/save-sms', {
            'Index': smsIndex,
            'Phones': { 'Phone': phoneNumbers },
            'Sca': sca,
            'Content': message,
            'Length': message.length,
            'Reserved': textMode,
            'Date': fromDate.toISOString().slice(0, 19).replace('T', ' ')
        });
    };
    Sms.prototype.sendSms = function (phoneNumbers, message, smsIndex, sca, textMode, date) {
        if (smsIndex === void 0) { smsIndex = -1; }
        if (sca === void 0) { sca = ''; }
        if (textMode === void 0) { textMode = sms_1.TextModeEnum.SEVEN_BIT; }
        if (!date) {
            date = new Date();
        }
        /*
    dicttoxml_xargs = {
        'item_func': lambda x: x[:-1]
    }*/
        return this._connection.postSet('sms/send-sms', {
            'Index': smsIndex,
            'Phones': { 'Phone': phoneNumbers },
            'Sca': sca,
            'Content': message,
            'Length': message.length,
            'Reserved': textMode,
            'Date': date.toISOString().slice(0, 19).replace('T', ' ')
        });
    };
    Sms.prototype.cancelSend = function () {
        /*, dicttoxml_xargs={
           'root': False,
       }*/
        return this._connection.postSet('sms/cancel-send', {
            'request': 1,
        });
    };
    Sms.prototype.config = function () {
        return this._connection.get('sms/config');
    };
    Sms.prototype.setConfig = function (sca, saveMode, validity, useSReport, sendType, priority) {
        if (saveMode === void 0) { saveMode = sms_1.SaveModeEnum.LOCAL; }
        if (validity === void 0) { validity = 10752; }
        if (useSReport === void 0) { useSReport = false; }
        if (sendType === void 0) { sendType = sms_1.SendTypeEnum.SEND; }
        if (priority === void 0) { priority = sms_1.PriorityEnum.NORMAL; }
        return this._connection.postSet('sms/config', {
            'SaveMode': saveMode,
            'Validity': validity,
            'Sca': sca,
            'UseSReport': useSReport,
            'SendType': sendType,
            'Priority': priority
        });
    };
    Sms.prototype.smsCountContact = function () {
        return this._connection.get('sms/sms-count-contact');
    };
    /**
     * Endpoint found by reverse engineering B310s-22 firmware, unknown usage
     */
    Sms.prototype.getSmsListPdu = function () {
        return this._connection.get('sms/sms-list-pdu');
    };
    /**
     * Endpoint found by reverse engineering B310s-22 firmware, unknown usage
     */
    Sms.prototype.splitSms = function () {
        return this._connection.get('sms/split-sms');
    };
    /**
     * Endpoint found by reverse engineering B310s-22 firmware, unknown usage
     */
    Sms.prototype.sendSmsPdu = function () {
        return this._connection.get('sms/send-sms-pdu');
    };
    /**
     * Endpoint found by reverse engineering B310s-22 firmware, unknown usage
     */
    Sms.prototype.recoverSms = function () {
        return this._connection.get('sms/recover-sms');
    };
    /**
     * Endpoint found by reverse engineering B310s-22 firmware, unknown usage
     */
    Sms.prototype.copySms = function () {
        return this._connection.get('sms/copy-sms');
    };
    /**
     * Endpoint found by reverse engineering B310s-22 firmware, unknown usage
     */
    Sms.prototype.moveSms = function () {
        return this._connection.get('sms/move-sms');
    };
    return Sms;
}(ApiGroup_1.ApiGroup));
exports.Sms = Sms;
//# sourceMappingURL=Sms.js.map